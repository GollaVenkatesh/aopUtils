{"version":3,"sources":["aoGlobalUtils.min.js"],"names":["AoUtils","stripNonNumeric","value","replace","formatTime","length","substring","formatDateToMoment","date","dmom","moment","Date","format","formatDateTimeToMoment","time","tmom","isDateInFuture","mom","days","diff","isDateToday","edm","tod","isTimeInFuture","maxFutureMinutes","minutes","max","service","this","globalUtils","angular","module"],"mappings":"CAAA,WACA,YAMA,SAASA,KAaP,QAASC,GAAgBC,GACvB,MAAIA,GACKA,EAAMC,QAAQ,MAAO,IAEvB,GAGT,QAASC,GAAWF,GAUlB,MATKA,KACHA,EAAQ,IAEVA,EAAQA,EAAMC,QAAQ,IAAK,IAC3BD,EAAQA,EAAMC,QAAQ,MAAO,IACzBD,EAAMG,OAAS,IACjBH,EAAQA,EAAMI,UAAU,EAAG,GAC3BJ,EAAQA,EAAMI,UAAU,EAAG,GAAK,IAAMJ,EAAMI,UAAU,IAEjDJ,EAGT,QAASK,GAAmBC,GAC1B,GAAIC,GAAOC,OAAO,GAAIC,MAAKH,GAC3B,IAAKC,EAAO,CACV,GAAIP,GAAQO,EAAKG,OAAO,aACxB,OAAOF,QAAOR,EAAO,eAMzB,QAASW,GAAuBL,EAAMM,GACpC,GAAIL,GAAOC,OAAO,GAAIC,MAAKH,IACvBO,EAAOL,OAAO,GAAIC,MAAKG,GAE3B,IAAKN,GAAQM,EAAO,CAClB,GAAIZ,GAAQO,EAAKG,OAAO,cAAgB,IAAMG,EAAKH,OAAO,WAC1D,OAAOF,QAAOR,EAAO,wBAMzB,QAASc,GAAeR,GACtB,GAAIS,GAAMV,EAAmBC,EAC7B,IAAKS,EAAM,CACT,GAAIC,GAAOD,EAAIE,KAAKT,SAAU,QAAQ,EACtC,IAAKQ,EAAO,EACV,OAAO,EAGX,OAAO,EAGT,QAASE,GAAYZ,GACnB,GAAIS,GAAMV,EAAmBC,EAC7B,IAAKS,EAAM,CACT,GAAII,GAAMJ,EAAIL,OAAO,MACjBU,EAAMZ,SAASE,OAAO,KAC1B,OAAOS,IAAOC,EAEhB,OAAO,EAGT,QAASC,GAAef,EAAMM,EAAMU,GAClC,GAAIP,GAAMJ,EAAuBL,EAAMM,EACvC,IAAKG,EAAM,CACT,GAAIQ,GAAUR,EAAIE,KAAKT,SAAU,WAAW,GACxCgB,EAAM,CAIV,IAHKF,GAAoBA,EAAmB,IAC1CE,EAAMF,GAEHC,EAAUC,EACb,OAAO,EAGX,OAAO,EAvFT,GAAIC,GAAUC,IAGdD,GAAQ1B,gBAAkBA,EAC1B0B,EAAQvB,WAAaA,EACrBuB,EAAQpB,mBAAqBA,EAC7BoB,EAAQd,uBAAyBA,EACjCc,EAAQX,eAAiBA,EACzBW,EAAQP,YAAcA,EACtBO,EAAQJ,eAAiBA,EAf3B,GAAIM,GAAcC,QAAQC,OAAO,iBAEjCF,GAAYF,QAAQ,UAAW3B","file":"aoGlobalUtils.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar globalUtils = angular.module(\"globalUtils\", []);\n\nglobalUtils.service(\"AoUtils\", AoUtils);\n\n/* @ngInject */\nfunction AoUtils() {\n  var service = this;\n\n  // UTILITY METHODS\n  service.stripNonNumeric = stripNonNumeric;\n  service.formatTime = formatTime;\n  service.formatDateToMoment = formatDateToMoment;\n  service.formatDateTimeToMoment = formatDateTimeToMoment;\n  service.isDateInFuture = isDateInFuture;\n  service.isDateToday = isDateToday;\n  service.isTimeInFuture = isTimeInFuture;\n\n\n  function stripNonNumeric(value) {\n    if (value) {\n      return value.replace(/\\D/g, \"\");\n    }\n    return \"\";\n  }\n\n  function formatTime(value) {\n    if (!value) {\n      value = \"\";\n    }\n    value = value.replace(\":\", \"\");\n    value = value.replace(/\\D/g, \"\");\n    if (value.length > 2) {\n      value = value.substring(0, 4);\n      value = value.substring(0, 2) + \":\" + value.substring(2);\n    }\n    return value;\n  }\n\n  function formatDateToMoment(date) {\n    var dmom = moment(new Date(date));\n    if ( dmom ) {\n      var value = dmom.format(\"MM-DD-YYYY\");\n      return moment(value, \"MM-DD-YYYY\");\n    }\n\n    return undefined;\n  }\n\n  function formatDateTimeToMoment(date, time) {\n    var dmom = moment(new Date(date));\n    var tmom = moment(new Date(time));\n\n    if ( date && time ) {\n      var value = dmom.format(\"MM-DD-YYYY\") + \" \" + tmom.format(\"HH:mm:ss\");\n      return moment(value, \"MM-DD-YYYY HH:mm:ss\");\n    }\n\n    return undefined;\n  }\n\n  function isDateInFuture(date) {\n    var mom = formatDateToMoment(date);\n    if ( mom ) {\n      var days = mom.diff(moment(), 'days', true);\n      if ( days > 0 ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function isDateToday(date) {\n    var mom = formatDateToMoment(date);\n    if ( mom ) {\n      var edm = mom.format(\"DD\");\n      var tod = moment().format(\"DD\");\n      return edm == tod;\n    }\n    return false;\n  }\n\n  function isTimeInFuture(date, time, maxFutureMinutes) {\n    var mom = formatDateTimeToMoment(date, time);\n    if ( mom ) {\n      var minutes = mom.diff(moment(), 'minutes', true);\n      var max = 0;\n      if ( maxFutureMinutes && maxFutureMinutes > 0 ) {\n        max = maxFutureMinutes;\n      }\n      if ( minutes > max ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n})();"]}